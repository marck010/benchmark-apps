/*!
 * @author electricessence / https://github.com/electricessence/
 * Originally based upon .NET source but with many additions and improvements.
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Types","./TimeUnit","./ClockTime","./TimeQuantity","../../extends","../Lazy"],e)}(function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("../Types"),i=e("./TimeUnit"),o=e("./ClockTime"),r=e("./TimeQuantity"),u=e("../../extends"),s=e("../Lazy"),l=u["default"],c=function(e){function t(t,n){void 0===n&&(n=i.TimeUnit.Milliseconds);var r=this,u=i.TimeUnit.toMilliseconds(t,n);return r=e.call(this,u)||this,r.ticks=1e4*u,r.milliseconds=u,r.seconds=u/1e3,r.minutes=u/6e4,r.hours=u/36e5,r.days=u/864e5,r._time=s.Lazy.create(function(){return new o.ClockTime(r.getTotalMilliseconds())}),Object.freeze(r),r}return l(t,e),Object.defineProperty(t.prototype,"total",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"time",{get:function(){return this._time.value},enumerable:!0,configurable:!0}),t.prototype.add=function(e){if(n.Type.isNumber(e))throw new Error("Use .addUnit(value:number,units:TimeUnit) to add a numerical value amount.  Default units are milliseconds.\n.add only supports quantifiable time values (ITimeTotal).");return new t(this.getTotalMilliseconds()+e.total.milliseconds)},t.prototype.addUnit=function(e,n){return void 0===n&&(n=i.TimeUnit.Milliseconds),new t(this.getTotalMilliseconds()+i.TimeUnit.toMilliseconds(e,n))},t.from=function(e,n){return new t(e,n)},t.fromDays=function(e){return new t(e,i.TimeUnit.Days)},t.fromHours=function(e){return new t(e,i.TimeUnit.Hours)},t.fromMinutes=function(e){return new t(e,i.TimeUnit.Minutes)},t.fromSeconds=function(e){return new t(e,i.TimeUnit.Seconds)},t.fromMilliseconds=function(e){return new t(e,i.TimeUnit.Milliseconds)},t.fromTicks=function(e){return new t(e,i.TimeUnit.Ticks)},Object.defineProperty(t,"zero",{get:function(){return a||(a=new t(0))},enumerable:!0,configurable:!0}),t}(r.TimeQuantity);t.TimeSpan=c;var a;t["default"]=c});
//# sourceMappingURL=TimeSpan.js.map