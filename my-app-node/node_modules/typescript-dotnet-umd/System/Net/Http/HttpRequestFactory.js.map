{"version":3,"sources":["System/Net/Http/HttpRequestFactory.js","System/Net/Http/HttpRequestFactory.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","ArgumentNullException_1","DisposableBase_1","HttpMethod_1","Uri_1","extends_1","__extends","NAME","HttpRequestFactory","_super","_http","uriDefaults","_this","call","this","_disposableObjectName","ArgumentNullException","_uriDefaults","Uri","from","prototype","_onDispose","uri","_","throwIfDisposed","d","u","equals","params","updateQuery","request","method","data","get","HttpMethod","GET","put","PUT","post","POST","DELETE","DisposableBase"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,yCAA0C,kCAAmC,eAAgB,gBAAiB,oBAAqBN,IAEtK,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCR1D,IAAAC,GAAAP,EAAA,0CACAQ,EAAAR,EAAA,mCAEAS,EAAAT,EAAA,gBACAU,EAAAV,EAAA,iBAGAW,EAAAX,EAAA,oBAMMY,EAAYD,EAAAA,WACZE,EAAO,qBAIbC,EAAA,SAAAC,GAKC,QAAAD,GACSE,EACRC,GAFD,GAAAC,GAICH,EAAAI,KAAAC,OAAOA,IAIP,IAPQF,EAAAF,MAAAA,EAKRE,EAAKG,sBAAwBR,GAEzBG,EACH,KAAM,IAAIT,GAAAe,sBAAsB,QDHvB,OCKVJ,GAAKK,aAAeb,EAAAc,IAAIC,KAAKR,GDLZC,ECmEnB,MA9EwCN,GAAAE,EAAAC,GAmB7BD,EAAAY,UAAAC,WAAV,WAGCP,KAAKJ,MAAa,KAClBI,KAAKG,aAAoB,MAG1BT,EAAAY,UAAAE,IAAA,SAAIA,GAGH,GAAMC,GAAIT,IACVS,GAAEC,iBACF,IAAMC,GAAIF,EAAEN,aACNS,EAAItB,EAAAc,IAAIC,KAAKG,EAAKG,EAExB,OAAOA,IAAKC,EAAEC,OAAOF,GAClBF,EACA,GAAIf,GAAmBe,EAAEb,MAAOgB,IAGpClB,EAAAY,UAAAQ,OAAA,SAAOA,GAEN,GAAML,GAAIT,IAEV,OADAS,GAAEC,kBACKD,EAAED,IAAIC,EAAEN,aAAaY,YAAYD,KAGzCpB,EAAAY,UAAAU,QAAA,SAAiBC,EAA4BC,GAE5C,GAAMT,GAAIT,IAEV,OADAS,GAAEC,kBACKD,EAAEb,MAAMoB,SACdC,OAAQA,EACRT,IAAUC,EAAEN,aACZe,KAAMA,KAKRxB,EAAAY,UAAAa,IAAA,WAEC,MAAOnB,MAAKgB,QAAiB3B,EAAA+B,WAAWC,MAGzC3B,EAAAY,UAAAgB,IAAA,WAEC,MAAOtB,MAAKgB,QAAiB3B,EAAA+B,WAAWG,MAGzC7B,EAAAY,UAAAkB,KAAA,SAAcN,GAEb,MAAOlB,MAAKgB,QAAiB3B,EAAA+B,WAAWK,KAAMP,IAG/CxB,EAAAY,UAAA,UAAA,WAEC,MAAON,MAAKgB,QAAiB3B,EAAA+B,WAAWM,SAG1ChC,GA9EwCN,EAAAuC,eAA3BjD,GAAAgB,mBAAAA,EAgFbhB,EAAAA,WAAegB","file":"HttpRequestFactory.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Exceptions/ArgumentNullException\", \"../../Disposable/DisposableBase\", \"./HttpMethod\", \"../../Uri/Uri\", \"../../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ArgumentNullException_1 = require(\"../../Exceptions/ArgumentNullException\");\n    var DisposableBase_1 = require(\"../../Disposable/DisposableBase\");\n    var HttpMethod_1 = require(\"./HttpMethod\");\n    var Uri_1 = require(\"../../Uri/Uri\");\n    var extends_1 = require(\"../../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var NAME = 'HttpRequestFactory';\n    /**\n     * This class exposes a factory for making requests to prepared uri and params.\n     */\n    var HttpRequestFactory = /** @class */ (function (_super) {\n        __extends(HttpRequestFactory, _super);\n        function HttpRequestFactory(_http, uriDefaults) {\n            var _this = _super.call(this) || this;\n            _this._http = _http;\n            _this._disposableObjectName = NAME;\n            if (!_http)\n                throw new ArgumentNullException_1.ArgumentNullException('_http');\n            _this._uriDefaults = Uri_1.Uri.from(uriDefaults);\n            return _this;\n        }\n        HttpRequestFactory.prototype._onDispose = function () {\n            // super._onDispose(); // Not required for first level inheritance.\n            this._http = null;\n            this._uriDefaults = null;\n        };\n        HttpRequestFactory.prototype.uri = function (uri) {\n            var _ = this;\n            _.throwIfDisposed();\n            var d = _._uriDefaults, u = Uri_1.Uri.from(uri, d);\n            return d && u.equals(d)\n                ? _\n                : new HttpRequestFactory(_._http, u);\n        };\n        HttpRequestFactory.prototype.params = function (params) {\n            var _ = this;\n            _.throwIfDisposed();\n            return _.uri(_._uriDefaults.updateQuery(params));\n        };\n        HttpRequestFactory.prototype.request = function (method, data) {\n            var _ = this;\n            _.throwIfDisposed();\n            return _._http.request({\n                method: method,\n                uri: _._uriDefaults,\n                data: data\n            });\n        };\n        HttpRequestFactory.prototype.get = function () {\n            return this.request(HttpMethod_1.HttpMethod.GET);\n        };\n        HttpRequestFactory.prototype.put = function () {\n            return this.request(HttpMethod_1.HttpMethod.PUT);\n        };\n        HttpRequestFactory.prototype.post = function (data) {\n            return this.request(HttpMethod_1.HttpMethod.POST, data);\n        };\n        HttpRequestFactory.prototype['delete'] = function () {\n            return this.request(HttpMethod_1.HttpMethod.DELETE);\n        };\n        return HttpRequestFactory;\n    }(DisposableBase_1.DisposableBase));\n    exports.HttpRequestFactory = HttpRequestFactory;\n    exports.default = HttpRequestFactory;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {QueryParam} from \"../../Uri/QueryParam\";\r\nimport {ArgumentNullException} from \"../../Exceptions/ArgumentNullException\";\r\nimport {DisposableBase} from \"../../Disposable/DisposableBase\";\r\nimport {HttpMethodValue} from \"./HttpMethodValue\";\r\nimport {HttpMethod} from \"./HttpMethod\";\r\nimport {Uri} from \"../../Uri/Uri\";\r\nimport {IUri} from \"../../Uri/IUri\";\r\nimport {IHttpRequestAdapter} from \"./IHttpRequestAdapter\";\r\nimport __extendsImport from \"../../../extends\";\r\nimport GET = HttpMethod.GET;\r\nimport PUT = HttpMethod.PUT;\r\nimport POST = HttpMethod.POST;\r\nimport DELETE = HttpMethod.DELETE;\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\nconst NAME = 'HttpRequestFactory';\r\n/**\r\n * This class exposes a factory for making requests to prepared uri and params.\r\n */\r\nexport class HttpRequestFactory extends DisposableBase\r\n{\r\n\r\n\tprotected _uriDefaults:Uri;\r\n\r\n\tconstructor(\r\n\t\tprivate _http:IHttpRequestAdapter,\r\n\t\turiDefaults?:string|IUri)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._disposableObjectName = NAME;\r\n\r\n\t\tif(!_http)\r\n\t\t\tthrow new ArgumentNullException('_http');\r\n\r\n\t\tthis._uriDefaults = Uri.from(uriDefaults);\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\t// super._onDispose(); // Not required for first level inheritance.\r\n\t\tthis._http = <any>null;\r\n\t\tthis._uriDefaults = <any>null;\r\n\t}\r\n\r\n\turi(uri:string|IUri):HttpRequestFactory\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tconst d = _._uriDefaults,\r\n\t\t      u = Uri.from(uri, d);\r\n\r\n\t\treturn d && u.equals(d)\r\n\t\t\t? _\r\n\t\t\t: new HttpRequestFactory(_._http, u);\r\n\t}\r\n\r\n\tparams(params:QueryParam.Convertible):HttpRequestFactory\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _.uri(_._uriDefaults.updateQuery(params));\r\n\t}\r\n\r\n\trequest<TResult>(method:HttpMethodValue.Any, data?:any):PromiseLike<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _._http.request({\r\n\t\t\tmethod: method,\r\n\t\t\turi: <any>_._uriDefaults,\r\n\t\t\tdata: data\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tget<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(HttpMethod.GET);\r\n\t}\r\n\r\n\tput<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(HttpMethod.PUT);\r\n\t}\r\n\r\n\tpost<TResult>(data:any):PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(HttpMethod.POST, data);\r\n\t}\r\n\r\n\t'delete'<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(HttpMethod.DELETE);\r\n\t}\r\n\r\n}\r\n\r\nexport default HttpRequestFactory;"]}