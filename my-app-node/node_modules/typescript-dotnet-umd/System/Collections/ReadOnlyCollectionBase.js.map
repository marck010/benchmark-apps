{"version":3,"sources":["System/Collections/ReadOnlyCollectionBase.js","System/Collections/ReadOnlyCollectionBase.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","CollectionBase_1","extends_1","__extends","ReadOnlyCollectionBase","_super","apply","this","arguments","prototype","getCount","_getCount","getIsReadOnly","_addInternal","entry","_removeInternal","max","_clearInternal","getEnumerator","_getEnumerator","CollectionBase"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,mBAAoB,iBAAkBN,IAEzE,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCT1D,IAAAC,GAAAP,EAAA,oBAEAQ,EAAAR,EAAA,iBAEMS,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAAA,QAAAD,KDWY,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,YAAcD,KC6BvE,MAvCQJ,GAAAC,EAAAC,GAKGD,EAAAK,UAAAC,SAAV,WAEC,MAAOH,MAAKI,aAGHP,EAAAK,UAAAG,cAAV,WAEC,OAAO,GAIER,EAAAK,UAAAI,aAAV,SAAuBC,GAEtB,OAAO,GAIEV,EAAAK,UAAAM,gBAAV,SAA0BD,EAASE,GAElC,MAAO,IAGEZ,EAAAK,UAAAQ,eAAV,WAEC,MAAO,IAKRb,EAAAK,UAAAS,cAAA,WAEC,MAAOX,MAAKY,kBAGdf,GAvCQH,EAAAmB,eADc5B,GAAAY,uBAAAA,EA0CtBZ,EAAAA,WAAeY","file":"ReadOnlyCollectionBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./CollectionBase\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var CollectionBase_1 = require(\"./CollectionBase\");\n    var extends_1 = require(\"../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var ReadOnlyCollectionBase = /** @class */ (function (_super) {\n        __extends(ReadOnlyCollectionBase, _super);\n        function ReadOnlyCollectionBase() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ReadOnlyCollectionBase.prototype.getCount = function () {\n            return this._getCount();\n        };\n        ReadOnlyCollectionBase.prototype.getIsReadOnly = function () {\n            return true;\n        };\n        //noinspection JSUnusedLocalSymbols\n        ReadOnlyCollectionBase.prototype._addInternal = function (entry) {\n            return false;\n        };\n        //noinspection JSUnusedLocalSymbols\n        ReadOnlyCollectionBase.prototype._removeInternal = function (entry, max) {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype._clearInternal = function () {\n            return 0;\n        };\n        ReadOnlyCollectionBase.prototype.getEnumerator = function () {\n            return this._getEnumerator();\n        };\n        return ReadOnlyCollectionBase;\n    }(CollectionBase_1.CollectionBase));\n    exports.ReadOnlyCollectionBase = ReadOnlyCollectionBase;\n    exports.default = ReadOnlyCollectionBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport abstract class ReadOnlyCollectionBase<T>\r\nextends CollectionBase<T>\r\n{\r\n\r\n\tprotected abstract _getCount():number;\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._getCount();\r\n\t}\r\n\r\n\tprotected getIsReadOnly():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\tprotected _addInternal(entry:T):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\tprotected _removeInternal(entry:T, max?:number):number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected abstract _getEnumerator():IEnumerator<T>;\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\treturn this._getEnumerator();\r\n\t}\r\n\r\n}\r\n\r\nexport default ReadOnlyCollectionBase;"]}