{"version":3,"sources":["System/Collections/KeyNotFoundException.js","System/Collections/KeyNotFoundException.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","SystemException_1","extends_1","__extends","NAME","KeyNotFoundException","_super","apply","this","arguments","prototype","getName","SystemException"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,gCAAiC,iBAAkBN,IAEtF,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCR1D,IAAAC,GAAAP,EAAA,iCACAQ,EAAAR,EAAA,iBAGMS,EAAYD,EAAAA,WAEZE,EAAc,wBAIpBC,EAAA,SAAAC,GAAA,QAAAD,KDOY,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,YAAcD,KCAvE,MAP0CL,GAAAE,EAAAC,GAE/BD,EAAAK,UAAAC,QAAV,WAEC,MAAOP,IAGTC,GAP0CJ,EAAAW,gBAA7BpB,GAAAa,qBAAAA,EASbb,EAAAA,WAAea","file":"KeyNotFoundException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/system.collections.generic.KeyNotFoundException(v=vs.110).aspx\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../Exceptions/SystemException\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var SystemException_1 = require(\"../Exceptions/SystemException\");\n    var extends_1 = require(\"../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var NAME = 'KeyNotFoundException ';\n    var KeyNotFoundException = /** @class */ (function (_super) {\n        __extends(KeyNotFoundException, _super);\n        function KeyNotFoundException() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        KeyNotFoundException.prototype.getName = function () {\n            return NAME;\n        };\n        return KeyNotFoundException;\n    }(SystemException_1.SystemException));\n    exports.KeyNotFoundException = KeyNotFoundException;\n    exports.default = KeyNotFoundException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.collections.generic.KeyNotFoundException(v=vs.110).aspx\r\n */\r\n\r\n\r\nimport {SystemException, Error} from \"../Exceptions/SystemException\";\r\nimport __extendsImport from \"../../extends\";\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'KeyNotFoundException ';\r\n\r\nexport {Error};\r\n\r\nexport class KeyNotFoundException extends SystemException\r\n{\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default KeyNotFoundException;"]}