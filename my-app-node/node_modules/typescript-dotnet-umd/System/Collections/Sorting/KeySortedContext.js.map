{"version":3,"sources":["System/Collections/Sorting/KeySortedContext.js","System/Collections/Sorting/KeySortedContext.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Values","SortContext_1","Functions_1","extends_1","__extends","KeySortedContext","_super","next","_keySelector","order","comparer","compare","_this","call","this","prototype","a","b","_","ks","Functions","Identity","d","_next","_order","SortContext"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,gBAAiB,gBAAiB,kBAAmB,oBAAqBN,IAE7G,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCT1D,IAAAC,GAAAP,EAAA,iBACAQ,EAAAR,EAAA,iBACAS,EAAAT,EAAA,mBAKAU,EAAAV,EAAA,oBAEMW,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAEC,QAAAD,GACCE,EACUC,EACVC,EACAC,GADA,SAAAD,IAAAA,EAAA,GACA,SAAAC,IAAAA,EAAyBV,EAAOW,QAJjC,IAAAC,GAMCN,EAAAO,KAAAC,KAAMP,EAAMG,EAAUD,IAAMK,IDIlB,OCRAF,GAAAJ,aAAAA,EDQOI,ECSnB,MArBkER,GAAAC,EAAAC,GAWjED,EAAAU,UAAAJ,QAAA,SAAQK,EAAKC,GAEZ,GAAMC,GAAIJ,KACNK,EAAKD,EAAEV,YACX,KAAIW,GAAMA,GAAIjB,EAAAkB,UAAUC,SAAU,MAAOf,GAAAS,UAAMJ,QAAOE,KAAAC,KAACE,EAAGC,EAE1D,IAAMK,GAAItB,EAAOW,QAAaQ,EAAGH,GAASG,EAAGF,GAC7C,OAAM,IAAHK,GAAQJ,EAAEK,MAAcL,EAAEK,MAAMZ,QAAQK,EAAGC,GACvCC,EAAEM,OAAOF,GAElBjB,GArBkEJ,EAAAwB,YAArDlC,GAAAc,iBAAAA,EAuBbd,EAAAA,WAAec","file":"KeySortedContext.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Compare\", \"./SortContext\", \"../../Functions\", \"../../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Values = require(\"../../Compare\");\n    var SortContext_1 = require(\"./SortContext\");\n    var Functions_1 = require(\"../../Functions\");\n    var extends_1 = require(\"../../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var KeySortedContext = /** @class */ (function (_super) {\n        __extends(KeySortedContext, _super);\n        function KeySortedContext(next, _keySelector, order, comparer) {\n            if (order === void 0) { order = 1 /* Ascending */; }\n            if (comparer === void 0) { comparer = Values.compare; }\n            var _this = _super.call(this, next, comparer, order) || this;\n            _this._keySelector = _keySelector;\n            return _this;\n        }\n        KeySortedContext.prototype.compare = function (a, b) {\n            var _ = this;\n            var ks = _._keySelector;\n            if (!ks || ks == Functions_1.Functions.Identity)\n                return _super.prototype.compare.call(this, a, b);\n            // We force <any> here since it can be a Primitive or IComparable<any>\n            var d = Values.compare(ks(a), ks(b));\n            if (d == 0 && _._next)\n                return _._next.compare(a, b);\n            return _._order * d;\n        };\n        return KeySortedContext;\n    }(SortContext_1.SortContext));\n    exports.KeySortedContext = KeySortedContext;\n    exports.default = KeySortedContext;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport * as Values from \"../../Compare\";\r\nimport {SortContext} from \"./SortContext\";\r\nimport {Functions} from \"../../Functions\";\r\nimport {Comparison, Selector} from \"../../FunctionTypes\";\r\nimport {Comparable} from \"../../IComparable\";\r\nimport {IComparer} from \"../../IComparer\";\r\nimport {Order} from \"./Order\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class KeySortedContext<T, TKey extends Comparable> extends SortContext<T>\r\n{\r\n\tconstructor(\r\n\t\tnext:IComparer<T>|null,\r\n\t\tprotected _keySelector:Selector<T,TKey>|null,\r\n\t\torder:Order = Order.Ascending,\r\n\t\tcomparer:Comparison<T> = Values.compare)\r\n\t{\r\n\t\tsuper(next, comparer, order);\r\n\t}\r\n\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet ks = _._keySelector;\r\n\t\tif(!ks || ks==Functions.Identity) return super.compare(a, b);\r\n\t\t// We force <any> here since it can be a Primitive or IComparable<any>\r\n\t\tconst d = Values.compare(<any>ks(a), <any>ks(b));\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n\r\nexport default KeySortedContext;"]}