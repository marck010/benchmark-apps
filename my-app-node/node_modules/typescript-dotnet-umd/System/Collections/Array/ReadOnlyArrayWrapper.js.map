{"version":3,"sources":["System/Collections/Array/ReadOnlyArrayWrapper.js","System/Collections/Array/ReadOnlyArrayWrapper.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","ReadOnlyCollectionWrapper_1","extends_1","__extends","ReadOnlyArrayWrapper","_super","array","_this","call","this","__getValueAt","i","prototype","_onDispose","getValueAt","index","throwIfDisposed"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,+BAAgC,oBAAqBN,IAExF,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCT1D,IAAAC,GAAAP,EAAA,gCACAQ,EAAAR,EAAA,oBAEMS,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAGC,QAAAD,GAAYE,GAAZ,GAAAC,GAECF,EAAAG,KAAAC,KAAMH,IAAMG,IDSF,OCRVF,GAAKG,aAAe,SAAAC,GAAK,MAAAL,GAAMK,IDQdJ,ECMnB,MApBqDJ,GAAAC,EAAAC,GAS1CD,EAAAQ,UAAAC,WAAV,WAECR,EAAAO,UAAMC,WAAUL,KAAAC,MAChBA,KAAKC,aAAoB,MAI1BN,EAAAQ,UAAAE,WAAA,SAAWC,GAEV,MADAN,MAAKO,kBACEP,KAAKC,aAAaK,IAE3BX,GApBqDH,EAAAA,WD0BjDT,GAAAA,WAAkBY","file":"ReadOnlyArrayWrapper.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../ReadOnlyCollectionWrapper\", \"../../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ReadOnlyCollectionWrapper_1 = require(\"../ReadOnlyCollectionWrapper\");\n    var extends_1 = require(\"../../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var ReadOnlyArrayWrapper = /** @class */ (function (_super) {\n        __extends(ReadOnlyArrayWrapper, _super);\n        function ReadOnlyArrayWrapper(array) {\n            var _this = _super.call(this, array) || this;\n            _this.__getValueAt = function (i) { return array[i]; };\n            return _this;\n        }\n        ReadOnlyArrayWrapper.prototype._onDispose = function () {\n            _super.prototype._onDispose.call(this);\n            this.__getValueAt = null;\n        };\n        ReadOnlyArrayWrapper.prototype.getValueAt = function (index) {\n            this.throwIfDisposed();\n            return this.__getValueAt(index);\n        };\n        return ReadOnlyArrayWrapper;\n    }(ReadOnlyCollectionWrapper_1.default));\n    exports.default = ReadOnlyArrayWrapper;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport ReadOnlyCollectionWrapper from \"../ReadOnlyCollectionWrapper\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyArrayWrapper<T> extends ReadOnlyCollectionWrapper<T>\r\n{\r\n\r\n\tconstructor(array:ArrayLike<T>)\r\n\t{\r\n\t\tsuper(array);\r\n\t\tthis.__getValueAt = i => array[i];\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis.__getValueAt = <any>null;\r\n\t}\r\n\r\n\tprivate __getValueAt:(i:number)=>T;\r\n\tgetValueAt(index:number):T {\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getValueAt(index);\r\n\t}\r\n}\r\n"]}