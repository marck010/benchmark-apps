{"version":3,"sources":["System/Exceptions/ArgumentNullException.js","System/Exceptions/ArgumentNullException.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","ArgumentException_1","extends_1","__extends","NAME","ArgumentNullException","_super","paramName","message","innerException","call","this","prototype","getName","ArgumentException"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,sBAAuB,iBAAkBN,IAE5E,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCT1D,IAAAC,GAAAP,EAAA,uBACAQ,EAAAR,EAAA,iBAEMS,EAAYD,EAAAA,WAEZE,EAAc,wBAIpBC,EAAA,SAAAC,GAEC,QAAAD,GACCE,EACAC,EACAC,GDKU,MCNV,UAAAD,IAAAA,EAAA,IAAqBD,EAAS,6BAG9BD,EAAAI,KAAAC,KAAMJ,EAAWC,EAASC,IAAeE,KAQ3C,MAf2CR,GAAAE,EAAAC,GAUhCD,EAAAO,UAAAC,QAAV,WAEC,MAAOT,IAGTC,GAf2CJ,EAAAa,kBAA9BtB,GAAAa,sBAAAA,EAiBbb,EAAAA,WAAea","file":"ArgumentNullException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./ArgumentException\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ArgumentException_1 = require(\"./ArgumentException\");\n    var extends_1 = require(\"../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var NAME = 'ArgumentNullException';\n    var ArgumentNullException = /** @class */ (function (_super) {\n        __extends(ArgumentNullException, _super);\n        function ArgumentNullException(paramName, message, innerException) {\n            if (message === void 0) { message = \"'\" + paramName + \"' is null (or undefined).\"; }\n            return _super.call(this, paramName, message, innerException) || this;\n        }\n        ArgumentNullException.prototype.getName = function () {\n            return NAME;\n        };\n        return ArgumentNullException;\n    }(ArgumentException_1.ArgumentException));\n    exports.ArgumentNullException = ArgumentNullException;\n    exports.default = ArgumentNullException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {ArgumentException, Error} from \"./ArgumentException\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'ArgumentNullException';\r\n\r\nexport {Error};\r\n\r\nexport class ArgumentNullException extends ArgumentException\r\n{\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tmessage:string = `'${paramName}' is null (or undefined).`,\r\n\t\tinnerException?:Error)\r\n\t{\r\n\t\tsuper(paramName, message, innerException);\r\n\t}\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentNullException;"]}